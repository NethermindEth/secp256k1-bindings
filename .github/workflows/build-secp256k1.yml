name: Build secp256k1

on:
  workflow_dispatch:
    inputs:
      ref:
        description: secp256k1 repo ref
        required: true
        default: master
        type: string
      create-pr:
        description: Create a pull request
        default: false
        type: boolean

permissions:
  contents: write
  pull-requests: write

env:
  RETENTION: 7

jobs:
  build-linux:
    name: Linux build
    strategy:
      matrix:
        arch: [arm64, x64]
    runs-on: ${{ matrix.arch == 'arm64' && 'ubuntu-22.04-arm' || 'ubuntu-22.04' }}
    steps:
      - name: Check out secp256k1 repository
        uses: actions/checkout@v4
        with:
          repository: bitcoin-core/secp256k1
          ref: ${{ github.event.inputs.ref }}

      - name: Build
        run: |
          rm -rf build
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DSECP256K1_ENABLE_MODULE_RECOVERY=ON
          cmake --build build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.arch }}
          path: build/lib/libsecp256k1.so
          retention-days: ${{ env.RETENTION }}
          if-no-files-found: error

  build-macos:
    name: macOS build
    strategy:
      matrix:
        arch: [arm64, x64]
    runs-on: macos-latest
    env:
      ARCH: ${{ matrix.arch == 'arm64' && 'arm64' || 'x86_64' }}
    steps:
      - name: Check out secp256k1 repository
        uses: actions/checkout@v4
        with:
          repository: bitcoin-core/secp256k1
          ref: ${{ github.event.inputs.ref }}

      - name: Build
        run: |
          rm -rf build
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_OSX_ARCHITECTURES=$ARCH \
            -DSECP256K1_ENABLE_MODULE_RECOVERY=ON
          cmake --build build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: osx-${{ matrix.arch }}
          path: build/lib/libsecp256k1.dylib
          retention-days: ${{ env.RETENTION }}
          if-no-files-found: error

  build-windows:
    name: Windows build
    strategy:
      matrix:
        arch: [arm64, x64]
    runs-on: ${{ matrix.arch == 'arm64' && 'windows-11-arm' || 'windows-latest' }}
    steps:
      - name: Check out secp256k1 repository
        uses: actions/checkout@v4
        with:
          repository: bitcoin-core/secp256k1
          ref: ${{ github.event.inputs.ref }}

      - name: Build
        run: |
          if (Test-Path build) { rd -Recurse build }
          cmake -S . -B build -G "Visual Studio 17 2022" -A ${{ matrix.arch }} `
            -DSECP256K1_ENABLE_MODULE_RECOVERY=ON
          cmake --build build --config Release
          ls build/bin/Release/*.dll | rni -NewName secp256k1.dll

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: win-${{ matrix.arch }}
          path: build/bin/Release/secp256k1.dll
          retention-days: ${{ env.RETENTION }}
          if-no-files-found: error

  create-pr:
    name: Create a pull request
    needs: [build-linux, build-macos, build-windows]
    if: github.event.inputs.create-pr == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: src/Nethermind.Crypto.SecP256k1/runtimes

      - name: Move artifacts
        working-directory: src/Nethermind.Crypto.SecP256k1/runtimes
        run: |
          mv -f linux-arm64/libsecp256k1.so linux-arm64/native/libsecp256k1.so
          mv -f linux-x64/libsecp256k1.so linux-x64/native/libsecp256k1.so
          mv -f osx-arm64/libsecp256k1.dylib osx-arm64/native/libsecp256k1.dylib
          mv -f osx-x64/libsecp256k1.dylib osx-x64/native/libsecp256k1.dylib
          mv -f win-arm64/secp256k1.dll win-arm64/native/secp256k1.dll
          mv -f win-x64/secp256k1.dll win-x64/native/secp256k1.dll

      - name: Create a pull request
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          head_branch=feature/mcl-build-$GITHUB_RUN_NUMBER-$GITHUB_RUN_ATTEMPT
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git checkout -b $head_branch
          git add -A
          git commit -am "Update secp256k1 binaries"
          git push origin $head_branch
          gh pr create -B $GITHUB_REF_NAME -H $head_branch -t "Update secp256k1 binaries" -b "Built and updated secp256k1 binaries"
