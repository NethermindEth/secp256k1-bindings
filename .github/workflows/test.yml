name: Test

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      ref:
        default: master
        description: libsecp256k1 version
        required: false
      publish:
        default: false
        description: Publish package
        required: false
        type: boolean

env:
  RETENTION: 2

jobs:
  build-linux:
    name: Linux build
    strategy:
      matrix:
        arch: [arm64, x64]
    runs-on: ubuntu-22.04
    steps:
      - name: Check out secp256k1 repository
        uses: actions/checkout@v4
        with:
          repository: bitcoin-core/secp256k1
          ref: ${{ github.event.inputs.ref }}
          path: secp256k1

      - name: Set up GNU C compiler for arm64
        if: matrix.arch == 'arm64'
        run: sudo apt-get update && sudo apt-get install -y gcc-12-aarch64-linux-gnu

      - name: Build
        working-directory: secp256k1
        run: |
          rm -rf build
          cmake -S . -B build \
            -D CMAKE_BUILD_TYPE=Release \
            -D SECP256K1_ENABLE_MODULE_RECOVERY=ON \
            ${{ matrix.arch == 'arm64' && '-D CMAKE_C_COMPILER=aarch64-linux-gnu-gcc-12 -D CMAKE_SYSTEM_NAME=Linux -D CMAKE_SYSTEM_PROCESSOR=aarch64' || '' }}
          cmake --build build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.arch }}
          path: secp256k1/build/lib/libsecp256k1.so
          retention-days: ${{ env.RETENTION }}
          if-no-files-found: error

  build-macos:
    name: macOS build
    strategy:
      matrix:
        arch: [arm64, x86_64]
    runs-on: macos-latest
    env:
      ARCH: ${{ matrix.arch == 'arm64' && 'arm64' || 'x64' }}
    steps:
      - name: Check out secp256k1 repository
        uses: actions/checkout@v4
        with:
          repository: bitcoin-core/secp256k1
          ref: ${{ github.event.inputs.ref }}
          path: secp256k1

      - name: Build
        working-directory: secp256k1
        run: |
          rm -rf build
          cmake -S . -B build \
            -D CMAKE_BUILD_TYPE=Release \
            -D CMAKE_OSX_ARCHITECTURES=${{ matrix.arch }} \
            -D SECP256K1_ENABLE_MODULE_RECOVERY=ON
          cmake --build build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: osx-${{ env.ARCH }}
          path: secp256k1/build/lib/libsecp256k1.dylib
          retention-days: ${{ env.RETENTION }}
          if-no-files-found: error

  build-windows:
    name: Windows build
    runs-on: windows-latest
    steps:
      - name: Check out secp256k1 repository
        uses: actions/checkout@v4
        with:
          repository: bitcoin-core/secp256k1
          ref: ${{ github.event.inputs.ref }}
          path: secp256k1

      - name: Build
        working-directory: secp256k1
        shell: pwsh
        run: |
          if (Test-Path build) { rd -Recurse build }
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 `
            -D SECP256K1_ENABLE_MODULE_RECOVERY=ON
          cmake --build build --config Release
          ls build/bin/Release/*.dll | rni -NewName secp256k1.dll
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: win-x64
          path: secp256k1/build/bin/Release/secp256k1.dll
          retention-days: ${{ env.RETENTION }}
          if-no-files-found: error

  test:
    name: Test
    needs: [build-linux, build-macos, build-windows]
    env:
      BUILD_CONFIG: release
    runs-on: ubuntu-latest
    steps:
      - name: Check out secp256k1-bindings repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: src/Nethermind.Crypto.SecP256k1/runtimes

      - name: Move artifacts
        working-directory: src/Nethermind.Crypto.SecP256k1/runtimes
        run: |
          mv -f linux-arm64/libsecp256k1.so linux-arm64/native/libsecp256k1.so
          mv -f linux-x64/libsecp256k1.so linux-x64/native/libsecp256k1.so
          mv -f osx-arm64/libsecp256k1.dylib osx-arm64/native/libsecp256k1.dylib
          mv -f osx-x64/libsecp256k1.dylib osx-x64/native/libsecp256k1.dylib
          mv -f win-x64/secp256k1.dll win-x64/native/secp256k1.dll

      - name: Set up .NET
        uses: actions/setup-dotnet@v4

      - name: Install dependencies
        working-directory: src
        run: dotnet restore

      - name: Build
        working-directory: src/Nethermind.Crypto.SecP256k1
        run: dotnet build -c ${{ env.BUILD_CONFIG }} --no-restore

      - name: Test
        working-directory: src/Nethermind.Crypto.SecP256k1.Test
        run: dotnet test -c ${{ env.BUILD_CONFIG }} --no-restore

      - name: Publish
        if: ${{ inputs.publish }}
        working-directory: src/Nethermind.Crypto.SecP256k1
        run: |
          dotnet pack -c ${{ env.BUILD_CONFIG }} --no-build
          dotnet nuget push bin/${{ env.BUILD_CONFIG }}/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
